services:
  webhook:
    build: .
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - DB_URL=postgresql+psycopg://admin:senha_segura@postgres:5432/telegram_bots
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app

  worker:
    build: .
    command: celery -A workers.celery_app worker --concurrency=10 -l info
    env_file: .env
    environment:
      - DB_URL=postgresql+psycopg://admin:senha_segura@postgres:5432/telegram_bots
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    deploy:
      replicas: 3  # 3 workers = 30 threads
    volumes:
      - .:/app

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: telegram_bots
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: senha_segura
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d telegram_bots"]
      interval: 5s
      timeout: 5s
      retries: 5

  flower:
    build: .
    command: celery -A workers.celery_app flower
    ports:
      - "5555:5555"
    env_file: .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started

volumes:
  pg_data:
  redis_data:
