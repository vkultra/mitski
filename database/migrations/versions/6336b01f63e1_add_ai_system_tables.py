"""add ai system tables

Revision ID: 6336b01f63e1
Revises: 2946e7ba33e5
Create Date: 2025-10-04 03:50:33.066167

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6336b01f63e1"
down_revision: Union[str, None] = "2946e7ba33e5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ai_phases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column("phase_trigger", sa.String(length=32), nullable=False),
        sa.Column("phase_prompt", sa.String(length=4096), nullable=False),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["bot_id"], ["bots.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_bot_trigger", "ai_phases", ["bot_id", "phase_trigger"], unique=True
    )
    op.create_table(
        "bot_ai_configs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column("model_type", sa.String(length=32), nullable=True),
        sa.Column("general_prompt", sa.String(length=4096), nullable=True),
        sa.Column("temperature", sa.String(length=8), nullable=True),
        sa.Column("max_tokens", sa.Integer(), nullable=True),
        sa.Column("is_enabled", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["bot_id"], ["bots.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("bot_id"),
    )
    op.create_table(
        "conversation_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column("user_telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("role", sa.String(length=16), nullable=False),
        sa.Column("content", sa.String(length=8192), nullable=False),
        sa.Column("has_image", sa.Boolean(), nullable=True),
        sa.Column("image_url", sa.String(length=512), nullable=True),
        sa.Column("prompt_tokens", sa.Integer(), nullable=True),
        sa.Column("cached_tokens", sa.Integer(), nullable=True),
        sa.Column("completion_tokens", sa.Integer(), nullable=True),
        sa.Column("reasoning_tokens", sa.Integer(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.ForeignKeyConstraint(["bot_id"], ["bots.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_bot_user_created",
        "conversation_history",
        ["bot_id", "user_telegram_id", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_conversation_history_created_at"),
        "conversation_history",
        ["created_at"],
        unique=False,
    )
    op.create_table(
        "user_ai_sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column("user_telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("current_phase_id", sa.Integer(), nullable=True),
        sa.Column("message_count", sa.Integer(), nullable=True),
        sa.Column(
            "last_interaction",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["bot_id"], ["bots.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["current_phase_id"], ["ai_phases.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_bot_user_session",
        "user_ai_sessions",
        ["bot_id", "user_telegram_id"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_bot_user_session", table_name="user_ai_sessions")
    op.drop_table("user_ai_sessions")
    op.drop_index(
        op.f("ix_conversation_history_created_at"), table_name="conversation_history"
    )
    op.drop_index("idx_bot_user_created", table_name="conversation_history")
    op.drop_table("conversation_history")
    op.drop_table("bot_ai_configs")
    op.drop_index("idx_bot_trigger", table_name="ai_phases")
    op.drop_table("ai_phases")
    # ### end Alembic commands ###
