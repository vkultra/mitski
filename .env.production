# ===========================================
# CONFIGURAÇÕES DE PRODUÇÃO (espelha .env atual)
# ===========================================

# Ambiente
APP_ENV=production

# Bot Gerenciador (preencha com valores reais)
MANAGER_BOT_TOKEN=__PREENCHER__
TELEGRAM_WEBHOOK_SECRET=__PREENCHER__
# Use seu domínio público com HTTPS (ex.: https://bot.seudominio.com)
WEBHOOK_BASE_URL=https://SEU_DOMINIO_OU_IP

# Database & Queue (compose de produção sobrescreve hosts para serviços internos)
DB_URL=postgresql+psycopg://admin:senha_segura@localhost:5432/telegram_bots
REDIS_URL=redis://localhost:6379/0
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Security (gere uma chave nova: python3 -c "from cryptography.fernet import Fernet;import base64;print('base64:'+base64.b64encode(Fernet.generate_key()).decode())")
ENCRYPTION_KEY=base64:__PREENCHER__
# Opcional: IDs do Telegram com acesso administrativo (separe por vírgula)
ALLOWED_ADMIN_IDS=

# xAI Grok API (para funcionalidades de IA)
XAI_API_KEY=__PREENCHER__
GROK_API_BASE_URL=https://api.x.ai/v1
GROK_TIMEOUT=3600
GROK_MAX_CONCURRENT_REQUESTS=100

# Whisper API (transcrição de áudios)
WHISPER_API_KEY=__PREENCHER__
WHISPER_API_BASE=https://api.openai.com/v1
WHISPER_MODEL=whisper-1
WHISPER_TIMEOUT=15
AUDIO_MAX_DURATION=180
AUDIO_MAX_SIZE_MB=20

# Créditos
PUSHINRECARGA=

# Monitoring
LOG_LEVEL=INFO
SENTRY_DSN=

# Rate Limits (por bot+usuário)
RATE_LIMITS_JSON={"cmd:/start":{"limit":30,"window":60},"cb:action":{"limit":20,"window":30}}

# Connection Pools
REDIS_MAX_CONNECTIONS=100
REDIS_HOST=localhost
REDIS_PORT=6379
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=40

# Circuit Breaker (APIs externas)
CIRCUIT_BREAKER_FAIL_MAX=5
CIRCUIT_BREAKER_TIMEOUT=60

# Mirror System Configuration
# Modo de espelhamento: 'realtime' (1:1) ou 'batch' (agregado)
MIRROR_MODE=batch

# Configurações do modo batch (iguais ao .env atual)
MIRROR_BATCH_SIZE=5
MIRROR_BATCH_DELAY=8
MIRROR_FLUSH_TIMEOUT=60
MIRROR_MAX_BUFFER=1000

# Configurações de persistência
MIRROR_PERSIST_BUFFERS=true
MIRROR_RECOVERY_ON_STARTUP=true

# Configurações de workers
MIRROR_WORKERS=3
MIRROR_WORKER_CONCURRENCY=5

# Rate limiting do espelhamento
MIRROR_RATE_LIMIT_ENABLED=true
MIRROR_RATE_LIMIT_MESSAGES=10

# Ajustes específicos de produção (opcional)
# DB_PASSWORD define a senha do Postgres no compose de produção
DB_PASSWORD=__DEFINA_UMA_SENHA_FORTE__
# Flower UI auth
FLOWER_PASSWORD=__DEFINA_UMA_SENHA__
